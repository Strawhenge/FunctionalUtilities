name: Release

on:
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Version
        run: |
          echo "VERSION=1.2.$(${{ github.run_number }} - 32)" >> $env:GITHUB_ENV
          
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      - name: Build
        run: dotnet build -p:Version=${{ env.VERSION }} --configuration Release

      - name: Test
        run: dotnet test

      - name: Pack Nuget Package
        run: dotnet pack -c Release -p:PackageVersion=${{ env.VERSION }} -o nupkg

      - name: Publish Nuget Package
        run: dotnet nuget push *.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/Strawhenge/index.json --no-symbols true
        working-directory: ./nupkg
        
      - name: Release Unity Package
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout -b ${{ env.TEMP_BRANCH }}          
          
          Copy-Item "FunctionalUtilities\bin\Release\netstandard2.0\FunctionalUtilities.dll" -Destination "Package\Runtime"
          
          $package = Get-Content 'Package\package.json' -raw | ConvertFrom-Json
          $package.version = '${{ env.VERSION }}'
          $package | ConvertTo-Json | set-content 'Package\package.json'
          
          git add Package\Runtime\FunctionalUtilities.dll -f
          git add Package\package.json
          git commit -m 'Prepare Release ${{ env.VERSION }}'
          git push --set-upstream origin ${{ env.TEMP_BRANCH }}
          
          git push --delete origin release
          git checkout -b release
          git push --set-upstream origin release
          git push --delete origin ${{ env.TEMP_BRANCH }}
        env:
          TEMP_BRANCH: temp-${{ github.run_number }}
          
          
